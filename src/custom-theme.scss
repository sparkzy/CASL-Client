
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

@import './themes/test-theme.sass';
@import './themes/hp-theme.sass';
@import './themes/stamina-theme.sass';
@import './themes/mental-theme.sass';
@import './themes/energy-theme.sass';

@mixin define-css-classes($theme) {
  @include mat.all-component-themes($theme);

	$primary: map-get($theme, primary);
	$accent: map-get($theme, accent);
	$warn: map-get($theme, warn);
	$background: map-get($theme, background);
	$foreground: map-get($theme, foreground);

  // CSS THEME-DEPENDENT-STYLES ARE HERE:
  .theme-dependent-colors {
      background: map-get($primary, 500);
      color:  map-get($accent, 500);
  }
}

// $casl-primary: mat-palette($test-theme-primary);
// $casl-accent: mat-palette($mat-gray);
// $casl-warn: mat-palette($mat-red);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$CASL-Client-primary: mat.define-palette(mat.$indigo-palette);
$CASL-Client-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$CASL-Client-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$CASL-Client-theme: mat.define-light-theme((
  color: (
    primary: $CASL-Client-primary,
    accent: $CASL-Client-accent,
    warn: $CASL-Client-warn,
  )
));

$app-themes: (
  hp: $hp-theme,
  hp-dark: $hp-dark-theme,
  stamina: $stamina-theme,
  stamina-dark: $stamina-dark-theme,
  mental: $mental-theme,
  mental-dark: $mental-dark-theme,
  energy: $energy-theme,
  energy-dark: $energy-dark-theme
);

@each $css-class, $theme in $app-themes {
	$primary: if(map-has-key($theme, primary), map-get($theme, primary), mat-palette(map-get($theme, primary-base)));

	$accent: if(map-has-key($theme, accent), map-get($theme, accent), mat-palette(map-get($theme, accent-base)));

	$warn: if(map-has-key($theme, warn), map-get($theme, warn), mat-palette(
			if(map-has-key($theme, warn-base), map-get($theme, warn-base), $mat-red)
	));

	.#{$css-class} {
		@include define-css-classes($theme);
	}

	.#{$css-class}-dark {
		@include define-css-classes($theme);
	}

	.theme-primary.#{$css-class} {
		background-color: map-get($primary, 500);
	}

	.theme-accent.#{$css-class} {
		background-color: map-get($accent, 500);
	}

	.theme-warn.#{$css-class} {
		background-color: map-get($warn, 500);
	}
}

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

// @include mat.all-component-themes($test-light-theme);
// @include mat.all-component-themes($test-dark-theme);


html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
